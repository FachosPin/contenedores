####################################################################
## Kobernetes Basic
####################################################################

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++ Muestra que servicio de kubernetes se esta ejecutando en cada servidor
++ Ejecutar el comando en cada nodo
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

$ ps -e | grep kube

===============================================================
== NOTA: Se puede ejecutar el nodo master y un minion en un unico servididor
===============================================================

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++ Ejecutar comandos en cada nodo
++ Siempre pide la informacion al master node
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

$ ps -e | grep etcd

$ kubectl --server=192.168.56.104:8080 get service

$ kubectl --server=192.168.56.104:8080 get pod

$ kubectl get service

$ kubectl get pod

===============================================================
== CLUSTER-IP es la IP con la cual me puedo conectar a un servicio en particular
== El puerto se muestra en PORT(S) el cual tambien van asociados con el servicio
== Detras de cada uno de esos servicios hay multiples containers que tienen su IP particular
===============================================================

$ kubectl get endpoints

===============================================================
== NOTA: Muestra los endpoint asociados a cada servicio
== Los internos los externos es con otro comando
===============================================================

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++ MASTER - Creating a deployment
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# su -

# systemctl status docker

# docker run -d --name docker-nginx -p 80:80 nginx

# exit

$ mkdir kubernetesFiles

$ cd kubernetesFiles/

$ pwd
/home/centos/kubernetesFiles

$ nano deployment.yaml

----------------------------------------------
Replace Old for New 
----------------------------------------------

----------------------------------------------
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-server-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
	app: nginx
    spec:
      containers:
      - name: nginx-app
        image: nginx
        imagePullPolicy: Always
        ports:
	- containerPort: 80
# vim: set ts=2 expandtab!:
----------------------------------------------

$ su -

# cd /home/centos/kubernetesFiles

# kubectl create -f deployment.yaml

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++ Ejecutar el comando en cada nodo
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

kubectl get deployments

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++ MASTER - Creating a service
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

$ cd /home/centos/kubernetesFiles

$ nano service.yaml

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    protocol: TCP
    nodePort: 30061
  type: LoadBalancer
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# su -

# cd /home/centos/kubernetesFiles

# kubectl create -f service.yaml

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++ Ejecutar el comando en cada nodo
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

$ kubectl get services

++ Abrir un navegador y poner la ip del servidor on el puerto 30061
++ e.g.: 192.168.54.104:30061

$ cd /home/centos/kubernetesFiles

$ mkdir pods

$ cd pods

$ nano mysql.yaml

----------------------------------------------
Replace Old for New 
----------------------------------------------

----------------------------------------------
apiVersion: v1
kind: Pod
metadata:
  name: mysql
  labels:
    name: mysql
spec:
  containers:
    - resources:
        limits :
          cpu: 1
      image: mysql
      name: mysql
      env:
        - name: MYSQL_ROOT_PASSWORD
          # change this
          value: Colombia1!
      ports:
        - containerPort: 3306
          name: mysql
----------------------------------------------

# kubectl create -f mysql.yaml

# kubectl get pods

# docker ps --format "{{.ID}}: {{.Image}}"

# kubectl describe po mysql

$ cd /home/centos/kubernetesFiles/pods

$ nano mysql-service.yaml

----------------------------------------------
Replace Old for New 
----------------------------------------------

----------------------------------------------
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mysql
  name: mysql
spec:
  externalIPs:
    - 192.168.56.105
  ports:
    # the port that this service should serve on
    - port: 3306
  # label keys and values that must match in order to receive traffic for this service
  selector:
    name: mysql 
----------------------------------------------

$ kubectl create -f mysql-service.yaml

# docker ps --format "{{.ID}}: {{.Image}}"

# kubectl get deployments

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++ https://kubernetes.io/docs/user-guide/kubectl/v1.8/#scale
++ https://kubernetes.io/docs/tutorials/stateless-application/expose-external-ip-address/
++ https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
++ https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# cd /home/centos/kubernetesFiles

# kubectl scale --replicas=2 -f deployment.yaml

# docker ps --format "{{.ID}}: {{.Image}}:" | grep 'mysql\|nginx'

# kubectl get pod

# etcdctl ls /registry

# etcdctl ls /registry/ranges

# etcdctl get /registry/ranges/servicenodeports

# etcdctl get /registry/ranges/serviceips



->>>>>>>>>>>>>>>>>>>>>>>>>>>
Work
How to deploy a NodeJS app to Kubernetes
https://seanmcgary.com/posts/how-to-deploy-a-nodejs-app-to-kubernetes